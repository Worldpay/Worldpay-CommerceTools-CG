'use strict'

const WorldpayBase = require('./WorldpayBase')
const WP = require('./constants')

/**
 * A Worldpay XML CreateToken entity used for token generation allowing safely storing credit cards for reuse
 * https://developer.worldpay.com/docs/wpg/tokenisation/createshoppertokens#create-a-shopper-token-with-a-payment-request
 */
class WorldpayCreateTokenData extends WorldpayBase {
  constructor() {
    super(constraints)
  }

  /**
   * States whether the token will be a shopper or a merchant token.
   * @param tokenScope
   */
  withTokenScope(tokenScope) {
    this.tokenScope = tokenScope
    return this
  }

  /**
   * Used for providing a tokenisation prompt when creating tokens through the Hosted integration
   * @param tokenOptIn
   */
  withTokenOptIn(tokenOptIn) {
    this.tokenOptIn = tokenOptIn
    return this
  }

  /**
   * Unique reference generated by you to track key token events
   * @param tokenEventReference
   */
  withTokenEventReference(tokenEventReference) {
    this.tokenEventReference = tokenEventReference
    return this
  }

  /**
   * The reason the token was created
   * @param tokenReason
   */
  withTokenReason(tokenReason) {
    this.tokenReason = tokenReason
    return this
  }

  /**
   * An override of the default token life
   * @param paymentTokenExpiry
   */
  withPaymentTokenExpiry(paymentTokenExpiry) {
    this.paymentTokenExpiry = paymentTokenExpiry
    return this
  }

  buildXmlData() {
    const data = {
      createToken: {
        '@tokenScope': this.tokenScope,
        '@tokenOptIn': this.tokenOptIn,
        tokenEventReference: this.tokenEventReference,
        tokenReason: this.tokenReason,
        paymentTokenExpiry: this.asWorldpayDate(this.paymentTokenExpiry),
      },
    }

    return data
  }
}

const constraints = {
  tokenScope: {
    inclusion: [WP.WORLDPAY_TOKEN_SCOPE_SHOPPER, WP.WORLDPAY_TOKEN_SCOPE_MERCHANT],
  },
  tokenOptIn: {
    inclusion: [WP.WORLDPAY_TOKEN_OPT_IN_SILENT, WP.WORLDPAY_TOKEN_OPT_IN_NOTIFY, WP.WORLDPAY_TOKEN_OPT_IN_ASK],
  },
  tokenEventReference: {
    alpha_num_64: true,
  },
  tokenReason: {
    type: 'string',
  },
  paymentTokenExpiry: {
    type: 'date',
  },
}

module.exports = WorldpayCreateTokenData
